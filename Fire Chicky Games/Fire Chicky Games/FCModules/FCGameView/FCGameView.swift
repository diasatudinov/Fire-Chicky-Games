//
//  GameView.swift
//  Fire Chicky Games
//
//  Created by Dias Atudinov on 05.03.2025.
//


import SwiftUI

// MARK: - –ò–≥—Ä–æ–≤–æ–π —ç–∫—Ä–∞–Ω

struct GameView: View {
    @StateObject var game: GameModel
    
    var body: some View {
        VStack(spacing: 10) {
            // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∂–∏–∑–Ω—è—Ö –∏ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è —Ñ–ª–∞–∂–∫–∞—Ö
            HStack {
                Text("–ñ–∏–∑–Ω–∏: \(game.lives)")
                Text("–§–ª–∞–∂–∫–æ–≤: \(game.maxFlags - game.flagsPlaced)")
            }
            .font(.headline)
            
            // –°—Ç–∞—Ç—É—Å –∏–≥—Ä—ã
            if game.gameOver {
                Text("Game Over!")
                    .font(.largeTitle)
                    .foregroundColor(.red)
            } else if game.gameWon {
                Text("You Win!")
                    .font(.largeTitle)
                    .foregroundColor(.green)
            }
            
            // –ü–æ–¥—Å–∫–∞–∑–∫–∏ —Å–≤–µ—Ä—Ö—É (—Å—Ç–æ–ª–±—Ü—ã)
            let columnHints = game.columnFlameHints()
            HStack(spacing: 10) {
                Text(" ")
                    .frame(width: 30, height: 30)
                HStack(spacing: 0) {
                    ForEach(0..<game.columns, id: \.self) { c in
                        Text("\(columnHints[c])")
                            .frame(width: 30, height: 30)
                            .background(Color.yellow.opacity(0.3))
                    }
                }
            }
            
            // –ò–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ —Å –ø–æ–¥—Å–∫–∞–∑–∫–∞–º–∏ —Å–ª–µ–≤–∞ (—Å—Ç—Ä–æ–∫–∏)
            VStack(spacing: 00) {
                ForEach(0..<game.rows, id: \.self) { r in
                    HStack(spacing: 10) {
                        let rowHints = game.rowFlameHints()
                        Text("\(rowHints[r])")
                            .frame(width: 30, height: 30)
                            .background(Color.yellow.opacity(0.3))
                        HStack(spacing: 0) {
                        ForEach(0..<game.columns, id: \.self) { c in
                            let tile = game.board[r][c]
                            ZStack {
                                Rectangle()
                                    .stroke(Color.black, lineWidth: 1)
                                    .frame(width: 30, height: 30)
                                    .background((r, c) == game.level.chickenStart ? Color.gray.opacity(0.3) : ((tile.isRevealed && tile.arrow == nil) ? Color.gray.opacity(0.3) : Color.blue))
                                
                                // –ì–Ω–µ–∑–¥–æ –≤—Å–µ–≥–¥–∞ –≤–∏–¥–Ω–æ
                                if (r, c) == game.nestPosition {
                                    Text("üè†")
                                }
                                // –ö—É—Ä–æ—á–∫–∞
                                if (r, c) == game.chickenPosition {
                                    Text("üêî")
                                }
                                
                                // –ï—Å–ª–∏ –∫–ª–µ—Ç–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∞ –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç –æ–≥–æ–Ω—å
                                if tile.isRevealed && tile.isFlame {
                                    Text("üî•")
                                }
                                // –§–ª–∞–∂–æ–∫
                                if tile.isFlagged {
                                    Text("üö©")
                                }
                                // –°—Ç—Ä–µ–ª–∫–∞ ‚Äì –≤—Å–µ–≥–¥–∞ –≤–∏–¥–Ω–∞ –∏ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∞ –≤ —Ü–µ–Ω—Ç—Ä–µ –∫–ª–µ—Ç–∫–∏
                                if let arrow = tile.arrow {
                                    Text(arrow.symbol)
                                        .font(.caption)
                                        .foregroundColor(.black)
                                }
                            }
                            .onTapGesture {
                                game.toggleFlag(at: (row: r, col: c))
                            }
                        }
                    }
                    }
                }
            }
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–≤–∞–π–ø–æ–≤ –¥–ª—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –∫—É—Ä–∏—Ü—ã
            .gesture(
                DragGesture(minimumDistance: 20)
                    .onEnded { value in
                        let horizontal = value.translation.width
                        let vertical = value.translation.height
                        if abs(horizontal) > abs(vertical) {
                            if horizontal < 0 {
                                game.moveChicken(direction: .left)
                            } else {
                                game.moveChicken(direction: .right)
                            }
                        } else {
                            if vertical < 0 {
                                game.moveChicken(direction: .up)
                            } else {
                                game.moveChicken(direction: .down)
                            }
                        }
                    }
            )
            
            // –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ —É—Ä–æ–≤–Ω—è
            Button("Restart Level") {
                game.setupBoard()
            }
            .padding()
        }
        .padding()
    }
}
    
#Preview {
    FCTrapSweeperGameView()
}
